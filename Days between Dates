def year1_days(year1, month1, day1):
    if month1 == 1:
        return 365 - day1
    if month1 == 2:
        return 365 - 31 - day1
    if month1 == 3:
        return 365 - 31 - 28 - day1
    if month1 == 4:
        return 365 - 31 - 28 - 31 - day1
    if month1 == 5:
        return 365 - 31 - 28 - 31 - 30 - day1
    if month1 == 6:
        return 365 - 31 - 28 - 31 - 30 - 31 - day1
    if month1 == 7:
        return 365 - 31 - 28 - 31 - 30 - 31 - 30 - day1
    if month1 == 8:
        return 365 - 31 - 28 - 31 - 30 - 31 - 30 - 31 - day1
    if month1 == 9:
        return 365 - 31 - 28 - 31 - 30 - 31 - 30 - 31 - 31 - day1
    if month1 == 10:
        return 365 - 31 - 28 - 31 - 30 - 31 - 30 - 31 - 31 - 30 - day1
    if month1 == 11:
        return 365 - 31 - 28 - 31 - 30 - 31 - 30 - 31 - 31 - 30 - 31 - day1
    if month1 == 12:
        return 31 - day1
        
def last_year_days(year2, month2, day2):
    if month2 == 1:
        return day2
    if month2 == 2:
        return 31 + day2
    if month2 == 3:
        return 31 + 28 + day2
    if month2 == 4:
        return 31 + 28 + 31 + day2
    if month2 == 5:
        return 31 + 28 + 31 + 30 + day2
    if month2 == 6:
        return 31 + 28 + 31 + 30 + 31 + day2
    if month2 == 7:
        return 31 + 28 + 31 + 30 + 31 + 30 + day2
    if month2 == 8:
        return 31 + 28 + 31 + 30 + 31 + 30 + 31 + day2
    if month2 == 9:
        return 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + day2
    if month2 == 10:
        return 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + day2
    if month2 == 11:
        return 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31 + day2
    if month2 == 12:
        return 365 - 31 + day2

def middle_year_days(year1, year2):
    middle_years = year2 - year1 - 1
    return 365 * middle_years

def leap_year(year):
    if year % 4 == 0:
        if year % 100 == 0:
            if year % 400 == 0:
                return True
            return False
        return True
    return False

def passed_leap_day(m,d):
    if m >= 2:
        if m == 2:
            if d > 28:
                return True
            return False
        return True

def add_leap_days_middle_years(year1, year2):
    middle_year = year1
    to_add = 0
    while middle_year < year2 - 1:
        middle_year = middle_year + 1
        if leap_year(middle_year):
            to_add = to_add + 1
            return to_add



def add_leap_day_first(year1):
    if leap_year(year1):
        if passed_leap_day(month1,day1):
            return 0
        return 1

def add_leap_day_last(year2):
    if leap_year(year2):
        if passed_leap_day(month2,day2):
            return 1
        return 0

middle_year_days_total = (middle_year_days(year1, year2) + (add_leap_days_middle_years(year1, year2)

first_year_days = year1_days(year1, month1, day1) + add_leap_day_first(year1)

last_year_days_total = last_year_days(year2, month2, day2) + add_leap_day_last(year2)

age_in_days = middle_year_days_total + first_year_days_total + last_year_days_total
    
def daysBetweenDates(year1, month1, day1, year2, month2, day2):
    return age_in_days
